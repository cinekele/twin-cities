# --------------------------------------------------------------------------- #
#                 Find wikidata identifier from wikipedia URL                 #
# --------------------------------------------------------------------------- #

SELECT ?id WHERE {
  ?id ^schema:about <https://en.wikipedia.org/wiki/Radom> .
}


# --------------------------------------------------------------------------- #
#                         Select twinned cities names                         #
# --------------------------------------------------------------------------- #

SELECT ?id ?val ?label
WHERE {
  {
    ?id ^schema:about <https://en.wikipedia.org/wiki/Radom> .
  }
  ?id wdt:P190 ?val .
  
  
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language "en". 
    ?val rdfs:label ?label .
  }
}
LIMIT 100


# --------------------------------------------------------------------------- #
#                 Select twinned cities names with references                 #
#                          and start, end qualifiers                          #
#                               !use this ONE!                                #
# --------------------------------------------------------------------------- #

PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

PREFIX pr: <http://www.wikidata.org/prop/reference/>

PREFIX schema: <http://schema.org/>
PREFIX prov: <http://www.w3.org/ns/prov#>

SELECT ("https://en.wikipedia.org/wiki/Radom" as ?sourceWikipediaURL) 
  ?sourceId ?targetId ?targetLabel
  ?starttime ?endtime
  ?retrieved ?referenceURL ?publisher ?title
WHERE
{
  {
    ?sourceId ^schema:about <https://en.wikipedia.org/wiki/Radom> .
  }
  ?sourceId p:P190 ?statement.
  ?statement ps:P190 ?targetId.

  # rank - doesn't matter much - 3 possible values irrelevant for us
  #?statement wikibase:rank ?rank.
  # qualifiers
  OPTIONAL{ ?statement pq:P580 ?starttime. }
  OPTIONAL{ ?statement pq:P582 ?endtime. }
  # references
  OPTIONAL {
    ?statement prov:wasDerivedFrom ?refnode .
    ?refnode pr:P813 ?retrieved .
  }
  OPTIONAL {
    ?statement prov:wasDerivedFrom ?refnode .
    ?refnode pr:P854 ?referenceURL .
  }
  OPTIONAL {
    ?statement prov:wasDerivedFrom ?refnode .
    ?refnode pr:P123 ?publisher .
  }
  OPTIONAL {
    ?statement prov:wasDerivedFrom ?refnode .
    ?refnode pr:P1476 ?title .
  }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language "en". 
    ?targetId rdfs:label ?targetLabel .
    # ?ref rdfs:label ?labelRef . # refs (retrieved, referenceURL, publisher, title) labels may be needed in the future
  }
}

# --------------------------------------------------------------------------- #
#                 Select twinned cities names with all details                #
#                          from it's statement group                          #
#      (longer format - unknown structure (type - relation, qf - value))      #
# --------------------------------------------------------------------------- #

SELECT *
WHERE
{
  {
    ?id ^schema:about <https://en.wikipedia.org/wiki/Radom> .
  }
  ?id p:P190 ?statement.
  ?statement ps:P190 ?val.

  # rank
  #?statement wikibase:rank ?rank.
  # all details about statement
  OPTIONAL{ ?statement ?type ?qf. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language "en". 
    ?val rdfs:label ?label .
    ?qf rdfs:label ?labelQualifer .
  }
  FILTER (
    strstarts(str(?type), 'http://www.wikidata.org/prop/qualifier') 
    || ?type = ps:P190
  )
}
LIMIT 1000
